var_0: &setup_env_kalbasit
  run:
    name: Setup environment variables for kalbasit's hosts
    command: |
      echo "export CACHIX_CACHE=yl" >> $BASH_ENV
      echo "export CACHIX_SIGNING_KEY=\"${CACHIX_SIGNING_KEY}\"" >> $BASH_ENV

var_1: &setup_env_risson
  run:
    name: Setup environment variables for risson's hosts
    command: |
      echo "export CACHIX_CACHE=risson" >> $BASH_ENV
      echo "export CACHIX_SIGNING_KEY=\"${RISSON_CACHIX_SIGNING_KEY}\"" >> $BASH_ENV

var_2: &install-nix
  run:
    name: Install Nix
    command: |
      curl https://nixos.org/nix/install | sh

var_3: &install-dependencies
  run:
    name: Install dependencies
    command: |
      if [[ -r "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]]; then
        source "${HOME}/.nix-profile/etc/profile.d/nix.sh"
      fi

      # install git and bash
      nix-env -f '<nixpkgs>' -i -A gitAndTools.git -A bash

      # install cachix from nixpkgs at stable
      readonly shabka_path="$( pwd )"
      release="$( tr -d "\n" < "${shabka_path}/.release" )"
      export NIX_PATH="$( "${shabka_path}/lib/bash/nix-path.sh" "${release}" )"
      nix-env -f '<nixpkgs>' -iA cachix

var_4: &enable-cachix
  run:
    name: Enable cachix
    command: |
      if [[ -r "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]]; then
        source "${HOME}/.nix-profile/etc/profile.d/nix.sh"
      fi

      cachix use "${CACHIX_CACHE}"

var_5: &build-host
  run:
    name: Building the host
    working_directory: ~/shabka
    command: |
      if [[ -r "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]]; then
        source "${HOME}/.nix-profile/etc/profile.d/nix.sh"
      fi

      export DOTSHABKA_PATH="${HOME}/dotshabka"

      ./scripts/build-host.sh "${CIRCLE_JOB}"

var_6: &push-to-cachix
  run:
    name: Push the build to cachix
    working_directory: ~/shabka
    command: |
      if [[ -r "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]]; then
        source "${HOME}/.nix-profile/etc/profile.d/nix.sh"
      fi

      # The CACHIX_SIGNING_KEY is not available for pull requests coming from a
      # fork for security reasons.
      if [[ -z "${CACHIX_SIGNING_KEY:-}" ]]; then
        >&2 echo "CACHIX_SIGNING_KEY is not set, cannot push to cachix"
        exit 0
      fi

      export DOTSHABKA_PATH="${HOME}/dotshabka"

      ./scripts/push-to-cachix.sh "${CACHIX_CACHE}" "${CIRCLE_JOB}"

var_7: &download-kalbasit-dotshabka
  run:
    name: Download dotshabka from kalbasit
    working_directory: ~/
    command: |
      if ! git clone https://github.com/kalbasit/dotshabka.git -b "${CIRCLE_BRANCH}"; then
        git clone https://github.com/kalbasit/dotshabka.git
        >&2 echo "Cloned dotshabka from the master branch"
      else
        >&2 echo "Cloned dotshabka from the ${CIRCLE_BRANCH} branch"
      fi

version: 2
jobs:
  athena:
    macos:
      xcode: "9.0"

    working_directory: ~/shabka

    shell: /bin/sh -leo pipefail
    environment:
      BASH_ENV: /etc/profile

    steps:
      - checkout
      - *setup_env_kalbasit
      - *install-nix
      - *install-dependencies
      - *enable-cachix
      - *download-kalbasit-dotshabka
      - *build-host
      - *push-to-cachix

  cratos:
    working_directory: ~/shabka

    shell: /bin/sh -leo pipefail
    environment:
      BASH_ENV: /etc/profile

    docker:
      - image: nixos/nix

    steps:
      - checkout
      - *setup_env_kalbasit
      - *install-dependencies
      - *enable-cachix
      - *download-kalbasit-dotshabka
      - *build-host
      - *push-to-cachix

  hades:
    working_directory: ~/shabka

    shell: /bin/sh -leo pipefail
    environment:
      BASH_ENV: /etc/profile

    docker:
      - image: nixos/nix

    steps:
      - checkout
      - *setup_env_kalbasit
      - *install-dependencies
      - *enable-cachix
      - *download-kalbasit-dotshabka
      - *build-host
      - *push-to-cachix

  hera:
    working_directory: ~/shabka

    shell: /bin/sh -leo pipefail
    environment:
      BASH_ENV: /etc/profile

    docker:
      - image: nixos/nix

    steps:
      - checkout
      - *setup_env_kalbasit
      - *install-dependencies
      - *enable-cachix
      - *download-kalbasit-dotshabka
      - *build-host
      - *push-to-cachix

  poseidon:
    macos:
      xcode: "9.0"

    working_directory: ~/shabka

    shell: /bin/sh -leo pipefail
    environment:
      BASH_ENV: /etc/profile

    steps:
      - checkout
      - *setup_env_kalbasit
      - *install-nix
      - *install-dependencies
      - *enable-cachix
      - *download-kalbasit-dotshabka
      - *build-host
      - *push-to-cachix

  zeus:
    working_directory: ~/shabka

    shell: /bin/sh -leo pipefail
    environment:
      BASH_ENV: /etc/profile

    docker:
      - image: nixos/nix

    steps:
      - checkout
      - *setup_env_kalbasit
      - *install-dependencies
      - *enable-cachix
      - *download-kalbasit-dotshabka
      - *build-host
      - *push-to-cachix

workflows:
  version: 2
  testing:
    jobs:
      - athena:
          context: nix-global
      - cratos:
          context: nix-global
      - hades:
          context: nix-global
      - hera:
          context: nix-global
      - poseidon:
          context: nix-global
      - zeus:
          context: nix-global
