var_0: &global_env_kalbasit
  CACHIX_CACHE: yl

var_1: &global_env_risson
  CACHIX_CACHE: risson

var_2: &install-nix
  run:
    name: Install Nix
    command: |
      curl https://nixos.org/nix/install | sh

var_3: &install-dependencies
  run:
    name: Install dependencies
    command: |
      if [[ -r "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]]; then
        source "${HOME}/.nix-profile/etc/profile.d/nix.sh"
      fi

      # install git and bash
      nix-env -f '<nixpkgs>' -i -A gitAndTools.git -A bash

      # install cachix from nixpkgs at stable
      readonly shabka_path="$( pwd )"
      release="$( tr -d "\n" < "${shabka_path}/.release" )"
      export NIX_PATH="$( "${shabka_path}/lib/bash/nix-path.sh" "${release}" )"
      nix-env -f '<nixpkgs>' -iA cachix

var_4: &enable-cachix
  run:
    name: Enable cachix
    command: |
      if [[ -r "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]]; then
        source "${HOME}/.nix-profile/etc/profile.d/nix.sh"
      fi

      cachix use "${CACHIX_CACHE}"

var_5: &build-host
  run:
    name: Building the host
    working_directory: ~/shabka
    command: |
      if [[ -r "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]]; then
        source "${HOME}/.nix-profile/etc/profile.d/nix.sh"
      fi

      export DOTSHABKA_PATH="${HOME}/dotshabka"

      ./scripts/build-host.sh "${CIRCLE_JOB}"

var_6: &push-to-cachix-yl
  run:
    name: Push the build to cachix
    working_directory: ~/shabka
    command: |
      if [[ -r "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]]; then
        source "${HOME}/.nix-profile/etc/profile.d/nix.sh"
      fi

      # The YL_CACHIX_SIGNING_KEY is not available for pull requests coming from a
      # fork for security reasons.
      if [[ -z "${YL_CACHIX_SIGNING_KEY:-}" ]]; then
        >&2 echo "YL_CACHIX_SIGNING_KEY is not set, cannot push to cachix"
        exit 0
      fi

      export DOTSHABKA_PATH="${HOME}/dotshabka"

      ./scripts/push-to-cachix.sh "${CACHIX_CACHE}" "${CIRCLE_JOB}"

var_7: &push-to-cachix-risson
  run:
    name: Push the build to cachix
    working_directory: ~/shabka
    command: |
      if [[ -r "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]]; then
        source "${HOME}/.nix-profile/etc/profile.d/nix.sh"
      fi

      # The RISSON_CACHIX_SIGNING_KEY is not available for pull requests coming from a
      # fork for security reasons.
      if [[ -z "${RISSON_CACHIX_SIGNING_KEY:-}" ]]; then
        >&2 echo "RISSON_CACHIX_SIGNING_KEY is not set, cannot push to cachix"
        exit 0
      fi

      export DOTSHABKA_PATH="${HOME}/dotshabka"

      ./scripts/push-to-cachix.sh "${CACHIX_CACHE}" "${CIRCLE_JOB}"

var_8: &download-kalbasit-dotshabka
  run:
    name: Download dotshabka from kalbasit
    working_directory: ~/
    command: |
      if ! git clone https://github.com/kalbasit/dotshabka.git -b "${CIRCLE_BRANCH}"; then
        git clone https://github.com/kalbasit/dotshabka.git
        >&2 echo "Cloned dotshabka from the master branch"
      else
        >&2 echo "Cloned dotshabka from the ${CIRCLE_BRANCH} branch"
      fi

version: 2
jobs:
  athena:
    macos:
      xcode: "9.0"

    working_directory: ~/shabka

    environment:
      <<: *global_env_kalbasit

    steps:
      - checkout
      - *install-nix
      - *install-dependencies
      - *enable-cachix
      - *download-kalbasit-dotshabka
      - *build-host
      - *push-to-cachix-yl

  cratos:
    working_directory: ~/shabka

    environment:
      <<: *global_env_kalbasit

    docker:
      - image: nixos/nix

    steps:
      - checkout
      - *install-dependencies
      - *enable-cachix
      - *download-kalbasit-dotshabka
      - *build-host
      - *push-to-cachix-yl

  hades:
    working_directory: ~/shabka

    environment:
      <<: *global_env_kalbasit

    docker:
      - image: nixos/nix

    steps:
      - checkout
      - *install-dependencies
      - *enable-cachix
      - *download-kalbasit-dotshabka
      - *build-host
      - *push-to-cachix-yl

  hera:
    working_directory: ~/shabka

    environment:
      <<: *global_env_kalbasit

    docker:
      - image: nixos/nix

    steps:
      - checkout
      - *install-dependencies
      - *enable-cachix
      - *download-kalbasit-dotshabka
      - *build-host
      - *push-to-cachix-yl

  poseidon:
    macos:
      xcode: "9.0"

    working_directory: ~/shabka

    environment:
      <<: *global_env_kalbasit

    steps:
      - checkout
      - *install-nix
      - *install-dependencies
      - *enable-cachix
      - *download-kalbasit-dotshabka
      - *build-host
      - *push-to-cachix-yl

  zeus:
    working_directory: ~/shabka

    environment:
      <<: *global_env_kalbasit

    docker:
      - image: nixos/nix

    steps:
      - checkout
      - *install-dependencies
      - *enable-cachix
      - *download-kalbasit-dotshabka
      - *build-host
      - *push-to-cachix-yl

workflows:
  version: 2
  testing:
    jobs:
      - athena:
          context: nix-global
      - cratos:
          context: nix-global
      - hades:
          context: nix-global
      - hera:
          context: nix-global
      - poseidon:
          context: nix-global
      - zeus:
          context: nix-global
