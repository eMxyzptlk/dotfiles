#!/usr/bin/env bash
#
#   vim:ft=sh:fenc=UTF-8:ts=4:sts=4:sw=4:expandtab:foldmethod=marker:foldlevel=0:
#
#   $Id: screenshot 1322 2008-08-02 20:37:07Z wael $
#
#   Copyright (c) 2007 Wael Nasreddine <wael.nasreddine@gmail.com>
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
#   USA.
#

# Bootstrap{{{
bootstrap="$(dirname "$0")/.bootstrap"
if [ -f "${bootstrap}" ]; then
    source "${bootstrap}"
else
    echo "Cannot bootstrap"
    exit 54
fi
unset bootstrap
#}}}
# Defining variables#{{{
Folder="${HOME}/Documents/Screenshots"
#Command="import -window root"
Command="scrot"
FileName="$(date +%Y)/$(date +%m)-$(date +%B)/$(date +%d)-$(date +%A).png"
#}}}
# Sanity Check#{{{
Temp="$( echo "${Command}" | awk '{print $1}' )"
if [ ! -x "$(which ${Temp} 2> /dev/null)" ]; then
    print_error 0 "'${Temp}' does not exist or it is not executable, Cannot continue."
    exit 1
fi
unset Temp
#}}}
# Determine the output filename.#{{{
if [ ! -d "${Folder}/$(dirname ${FileName})" ]; then
    mkdir -p "${Folder}/$(dirname ${FileName})"
elif [ -f "${Folder}/${FileName}" ]; then
    i="0"
    while [ -f "${Folder}/${FileName}" ]; do
        (( i++ ))
        if [ "${i}" -eq "1" ]; then
            FileName="${FileName%.png}-${i}.png"
        else
            FileName="${FileName%-*.png}-${i}.png"
        fi
    done
fi
#}}}
# Take the screenshot.#{{{
Command="${Command} ${Folder}/${FileName}"
print_info 0 "Taking screenshot to ${Folder}/${FileName} in " false
for i in 0 1 2 3 4; do
    (( count = 5 - ${i} ))
    print_error 0 "${count} " false false
    if [ -x "$(${W} beep 2> /dev/null)" ]; then
        beep
    fi
    sleep 1
done
echo
if isTrue "${1}"; then
    clear
fi
${Command}
#}}}
# After the screenshot has been taken, play a sound and notify through libnotify#{{{
if [ -x "$(${W} mplayer 2> /dev/null)" ]; then
    ( mplayer -nocache -vc null -vo null "${HOME}"/lib/sounds/42899__FreqMan__Canon_DOS_D30_no_focus__preview.mp3 & ) &> /dev/null
fi
if [ -x "$(${W} notify-send 2> /dev/null)" ]; then
    ( notify-send -t 10000 -u low "Screenshot Taken." "The screenshot has been taken and saved to the file '${Folder}/${FileName}'." & ) &> /dev/null
fi
#}}}
# does the users wants the picture to be uploaded to ompload ?#{{{
if [ "${1}" = "-u" ]; then
    # Upload the picture.
    print_info 0 "Uploading the screenshot to ompload."
    ompload "${Folder}/${FileName}"
fi
#}}}
exit
