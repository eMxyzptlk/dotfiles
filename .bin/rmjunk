#!/usr/bin/env bash
#
#   vim:ft=sh:fenc=UTF-8:ts=4:sts=4:sw=4:expandtab:foldmethod=marker:foldlevel=0:
#
#   $Id: rmjunk 783 2008-03-24 12:20:18Z wael $
#
#   This script will remove junk files from / or $@
#   Copyright (C) 2006, Wael Nasreddine <wael.nasreddine@gmail.com>
#
#   This program is free software; you can redistribute it and/or
#   modify it under the terms of the GNU General Public License
#   as published by the Free Software Foundation; either version 2
#   of the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#

handle_interrupt () {
    echo -e "${FG_RED_B}Aborting...${FG_CLEAR}"
    rm -f ${LOCK} ${TMP} ${FILE}
    exit 130
}

### Traping Control C
trap handle_interrupt 2 15

if [ -z "${EDITOR}" ]; then
    echo -e "${FG_RED_B}ERROR: EDITOR is not defined, cannot continue...${FG_CLEAR}"
    exit 1
fi

LOCK="/tmp/rmjunk.lock"
if [ -f "${LOCK}" ]; then
    echo -e "${FG_RED_B}rmjunk is already in use,${FG_CLEAR}"
    echo -e "${FG_BLUE_B}If not then please remove ${LOCK} and try again.${CLEAR}"
    exit 1
fi
touch ${LOCK}


TMP="$(mktemp /tmp/rmjunk.XXXXXXX)"
FILE="$(mktemp /tmp/rmjunk.XXXXXXX)"

# Put the header in the file, preparing to fill it
echo "=== Files to remove (you may delete items from it) ===" > ${FILE}

# Find all junkie files in $@ or /
find ${@-.} \
    \( -name "*~" -type f \) \
    -o \( -name "*.pacorig" -type f \) \
    -o \( -name "*.pacnew" -type f \) \
    -o \( -name "*.pacsave" -type f \) \
    -o \( -name "*.orig" -type f \) \
    -o \( -name "*.rej" -type f \) \
    >> ${TMP} 2> /dev/null

# Sorting/filtering all the files into ${FILE}
# Remove non-writable files.
for i in $(cat ${TMP} | uniq | sort); do
    if [ -w ${i} ]; then
        echo ${i} >> ${FILE}
    fi
done

# Launching the editor so the user can remove
# Files from the rm command
echo -e "${FG_BLUE_B}Launching editor...${FG_CLEAR}"
${EDITOR} ${FILE}

# Removing files
files=($(cat ${FILE} | grep -v "=== Files to remove (you may delete items from it) ==="))
rm -f ${files[@]}

# Remove temporary files and lock file
rm -f ${FILE} ${TMP} ${LOCK}
