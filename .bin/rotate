#!/usr/bin/env bash
#
# vim:foldmethod=marker:foldlevel=0:
#
# Copyright (c) 2014-2017 Wael Nasreddine <wael.nasreddine@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

#
# Rotates modern Linux desktop screen and input devices to match. Handy for
# convertible notebooks. Call this script from panel launchers, keyboard
# shortcuts, or touch gesture bindings (xSwipe, touchegg, etc.).
#
# Using transformation matrix bits taken from:
#   https://wiki.ubuntu.com/X/InputCoordinateTransformation
#
# Taken from https://gist.github.com/mildmojo/48e9025070a2ba40795c and modified

# look for the touchpad
TOUCHPAD="$( xinput | grep -i touchpad | sed -e 's:.*id=\([0-9]*\).*:\1:g' )"
# look for the touchscreen
TOUCHSCREEN="$( xinput | grep -i touchscreen | sed -e 's:.*id=\([0-9]*\).*:\1:g' )"

if [[ -z "$1" ]]; then
  echo "Missing orientation."
  echo "Usage: $0 [normal|inverted|left|right] [revert_seconds]"
  echo
  exit 1
fi

function do_rotate
{
  xrandr --output "${1}" --rotate "${2}"

  TRANSFORM='Coordinate Transformation Matrix'

  case "$2" in
    normal)
      [[ -n "$TOUCHPAD" ]]    && xinput set-prop "$TOUCHPAD"    "$TRANSFORM" 1 0 0 0 1 0 0 0 1
      [[ -n "$TOUCHSCREEN" ]] && xinput set-prop "$TOUCHSCREEN" "$TRANSFORM" 1 0 0 0 1 0 0 0 1
      ;;
    inverted)
      [[ -n "$TOUCHPAD" ]]    && xinput set-prop "$TOUCHPAD"    "$TRANSFORM" -1 0 1 0 -1 1 0 0 1
      [[ -n "$TOUCHSCREEN" ]] && xinput set-prop "$TOUCHSCREEN" "$TRANSFORM" -1 0 1 0 -1 1 0 0 1
      ;;
    left)
      [[ -n "$TOUCHPAD" ]]    && xinput set-prop "$TOUCHPAD"    "$TRANSFORM" 0 -1 1 1 0 0 0 0 1
      [[ -n "$TOUCHSCREEN" ]] && xinput set-prop "$TOUCHSCREEN" "$TRANSFORM" 0 -1 1 1 0 0 0 0 1
      ;;
    right)
      [[ -n "$TOUCHPAD" ]]    && xinput set-prop "$TOUCHPAD"    "$TRANSFORM" 0 1 0 -1 0 1 0 0 1
      [[ -n "$TOUCHSCREEN" ]] && xinput set-prop "$TOUCHSCREEN" "$TRANSFORM" 0 1 0 -1 0 1 0 0 1
      ;;
  esac
}

XDISPLAY="$( xrandr --current | grep primary | awk '{print $1}' )"
XROT="$( xrandr --current --verbose | grep primary | awk '{print $6}' )"

do_rotate "${XDISPLAY}" "${1}"

if [ -n "${2}" ]; then
  sleep "${2}"
  do_rotate "${XDISPLAY}" "${XROT}"
fi
